/*! ui-router-extras - v0.0.9 - 2014-08-14 */!function(window,angular,undefined){function ancestors(first,second){var path=[];for(var n in first.path){if(first.path[n]!==second.path[n])break;path.push(first.path[n])}return path}function objectKeys(object){if(Object.keys)return Object.keys(object);var result=[];return angular.forEach(object,function(val,key){result.push(key)}),result}function arraySearch(array,value){if(Array.prototype.indexOf)return array.indexOf(value,Number(arguments[2])||0);var len=array.length>>>0,from=Number(arguments[2])||0;for(from=0>from?Math.ceil(from):Math.floor(from),0>from&&(from+=len);len>from;from++)if(from in array&&array[from]===value)return from;return-1}function inheritParams(currentParams,newParams,$current,$to){var parentParams,parents=ancestors($current,$to),inherited={},inheritList=[];for(var i in parents)if(parents[i].params&&(parentParams=isArray(parents[i].params)?parents[i].params:objectKeys(parents[i].params),parentParams.length))for(var j in parentParams)arraySearch(inheritList,parentParams[j])>=0||(inheritList.push(parentParams[j]),inherited[parentParams[j]]=currentParams[parentParams[j]]);return extend({},inherited,newParams)}function inherit(parent,extra){return extend(new(extend(function(){},{prototype:parent})),extra)}function resetIgnoreDsr(){ignoreDsr=undefined}function $StickyStateProvider(){var inactiveStates={},stickyStates={};this.registerStickyState=function(state){stickyStates[state.name]=state},this.enableDebug=function(enabled){DEBUG=enabled},this.$get=["$rootScope","$state","$stateParams","$injector","$log",function($rootScope,$state,$stateParams,$injector,$log){function mapInactives(){var mappedStates={};return angular.forEach(inactiveStates,function(state){for(var stickyAncestors=getStickyStateStack(state),i=0;i<stickyAncestors.length;i++){var parent=stickyAncestors[i].parent;mappedStates[parent.name]=mappedStates[parent.name]||[],mappedStates[parent.name].push(state)}mappedStates[""]&&(mappedStates.__inactives=mappedStates[""])}),mappedStates}function getStickyStateStack(state){var stack=[];if(!state)return stack;do state.sticky&&stack.push(state),state=state.parent;while(state);return stack.reverse(),stack}function getStickyTransitionType(fromPath,toPath,keep){if(fromPath[keep]===toPath[keep])return{from:!1,to:!1};var stickyFromState=keep<fromPath.length&&fromPath[keep].self.sticky,stickyToState=keep<toPath.length&&toPath[keep].self.sticky;return{from:stickyFromState,to:stickyToState}}function getEnterTransition(state,stateParams,ancestorParamsChanged){if(ancestorParamsChanged)return"updateStateParams";var inactiveState=inactiveStates[state.self.name];if(!inactiveState)return"enter";var paramsMatch=equalForKeys(stateParams,inactiveState.locals.globals.$stateParams,state.ownParams);return paramsMatch?"reactivate":"updateStateParams"}function getInactivatedState(state,stateParams){var inactiveState=inactiveStates[state.name];if(!inactiveState)return null;if(!stateParams)return inactiveState;var paramsMatch=equalForKeys(stateParams,inactiveState.locals.globals.$stateParams,state.ownParams);return paramsMatch?inactiveState:null}function equalForKeys(a,b,keys){if(!keys){keys=[];for(var n in a)keys.push(n)}for(var i=0;i<keys.length;i++){var k=keys[i];if(a[k]!=b[k])return!1}return!0}var stickySupport={getInactiveStates:function(){var states=[];return angular.forEach(inactiveStates,function(state){states.push(state)}),states},getInactiveStatesByParent:function(){return mapInactives()},processTransition:function(transition){var result={inactives:[],enter:[],exit:[],keep:0},fromPath=transition.fromState.path,fromParams=transition.fromParams,toPath=transition.toState.path,toParams=transition.toParams,options=transition.options,keep=0,state=toPath[keep];for(options.inherit&&(toParams=inheritParams($stateParams,toParams||{},$state.$current,transition.toState));state&&state===fromPath[keep]&&equalForKeys(toParams,fromParams,state.ownParams);)state=toPath[++keep];result.keep=keep;var idx,deepestUpdatedParams,deepestReactivate,reactivatedStatesByName={},pType=getStickyTransitionType(fromPath,toPath,keep),ancestorUpdated=!1;for(idx=keep;idx<toPath.length;idx++){var enterTrans=pType.to?getEnterTransition(toPath[idx],transition.toParams,ancestorUpdated):"enter";ancestorUpdated=ancestorUpdated||"updateStateParams"==enterTrans,result.enter[idx]=enterTrans,"reactivate"==enterTrans&&(deepestReactivate=reactivatedStatesByName[toPath[idx].name]=toPath[idx]),"updateStateParams"==enterTrans&&(deepestUpdatedParams=toPath[idx])}deepestReactivate=deepestReactivate?deepestReactivate.self.name+".":"",deepestUpdatedParams=deepestUpdatedParams?deepestUpdatedParams.self.name+".":"";var inactivesByParent=mapInactives(),keptStateNames=[""].concat(map(fromPath.slice(0,keep),function(state){return state.self.name}));for(angular.forEach(keptStateNames,function(name){for(var inactiveChildren=inactivesByParent[name],i=0;inactiveChildren&&i<inactiveChildren.length;i++){var child=inactiveChildren[i];reactivatedStatesByName[child.name]||deepestReactivate&&0===child.self.name.indexOf(deepestReactivate)||deepestUpdatedParams&&0===child.self.name.indexOf(deepestUpdatedParams)||result.inactives.push(child)}}),idx=keep;idx<fromPath.length;idx++){var exitTrans="exit";pType.from&&(result.inactives.push(fromPath[idx]),exitTrans="inactivate"),result.exit[idx]=exitTrans}return result},stateInactivated:function(state){inactiveStates[state.self.name]=state,state.self.status="inactive",state.self.onInactivate&&$injector.invoke(state.self.onInactivate,state.self,state.locals.globals)},stateReactivated:function(state){inactiveStates[state.self.name]&&delete inactiveStates[state.self.name],state.self.status="entered",state.self.onReactivate&&$injector.invoke(state.self.onReactivate,state.self,state.locals.globals)},stateExiting:function(exiting,exitQueue,onExit){var exitingNames={};angular.forEach(exitQueue,function(state){exitingNames[state.self.name]=!0}),angular.forEach(inactiveStates,function(inactiveExiting,name){!exitingNames[name]&&inactiveExiting.includes[exiting.name]&&(DEBUG&&$log.debug("Exiting "+name+" because it's a substate of "+exiting.name+" and wasn't found in ",exitingNames),inactiveExiting.self.onExit&&$injector.invoke(inactiveExiting.self.onExit,inactiveExiting.self,inactiveExiting.locals.globals),inactiveExiting.locals=null,inactiveExiting.self.status="exited",delete inactiveStates[name])}),onExit&&$injector.invoke(onExit,exiting.self,exiting.locals.globals),exiting.locals=null,exiting.self.status="exited",delete inactiveStates[exiting.self.name]},stateEntering:function(entering,params,onEnter){var inactivatedState=getInactivatedState(entering);if(inactivatedState&&!getInactivatedState(entering,params)){var savedLocals=entering.locals;this.stateExiting(inactivatedState),entering.locals=savedLocals}entering.self.status="entered",onEnter&&$injector.invoke(onEnter,entering.self,entering.locals.globals)}};return stickySupport}]}function SurrogateState(type){return{resolve:{},locals:{globals:root&&root.locals&&root.locals.globals},views:{},self:{},params:{},ownParams:[],surrogateType:type}}function debugTransition($log,currentTransition,stickyTransition){function message(path,index,state){return path[index]?path[index].toUpperCase()+": "+state.self.name:"("+state.self.name+")"}var inactiveLogVar=map(stickyTransition.inactives,function(state){return state.self.name}),enterLogVar=map(currentTransition.toState.path,function(state,index){return message(stickyTransition.enter,index,state)}),exitLogVar=map(currentTransition.fromState.path,function(state,index){return message(stickyTransition.exit,index,state)}),transitionMessage=currentTransition.fromState.self.name+": "+angular.toJson(currentTransition.fromParams)+":  -> "+currentTransition.toState.self.name+": "+angular.toJson(currentTransition.toParams);$log.debug("   Current transition: ",transitionMessage),$log.debug("Before transition, inactives are:   : ",map(_StickyState.getInactiveStates(),function(s){return s.self.name})),$log.debug("After transition,  inactives will be: ",inactiveLogVar),$log.debug("Transition will exit:  ",exitLogVar),$log.debug("Transition will enter: ",enterLogVar)}function debugViewsAfterSuccess($log,currentState,$state){$log.debug("Current state: "+currentState.self.name+", inactive states: ",map(_StickyState.getInactiveStates(),function(s){return s.self.name}));for(var viewMsg=function(local,name){return"'"+name+"' ("+local.$$state.name+")"},statesOnly=function(local,name){return"globals"!=name&&"resolve"!=name},viewsForState=function(state){var views=map(filterObj(state.locals,statesOnly),viewMsg).join(", ");return"("+(state.self.name?state.self.name:"root")+".locals"+(views.length?": "+views:"")+")"},message=viewsForState(currentState),parent=currentState.parent;parent&&parent!==currentState;)""===parent.self.name&&(message=viewsForState($state.$current.path[0])+" / "+message),message=viewsForState(parent)+" / "+message,currentState=parent,parent=currentState.parent;$log.debug("Views: "+message)}angular.module("ct.ui.router.extras",["ui.router"]);var ignoreDsr,DEBUG=!1,forEach=angular.forEach,extend=angular.extend,isArray=angular.isArray,map=function(collection,callback){"use strict";var result=[];return forEach(collection,function(item,index){result.push(callback(item,index))}),result},filterObj=function(collection,callback){"use strict";var result={};return forEach(collection,function(item,index){callback(item,index)&&(result[index]=item)}),result};angular.module("ct.ui.router.extras").config(["$provide",function($provide){var $state_transitionTo;$provide.decorator("$state",["$delegate","$q",function($state,$q){return $state_transitionTo=$state.transitionTo,$state.transitionTo=function(to,toParams,options){return options.ignoreDsr&&(ignoreDsr=options.ignoreDsr),$state_transitionTo.apply($state,arguments).then(function(result){return resetIgnoreDsr(),result},function(err){return resetIgnoreDsr(),$q.reject(err)})},$state}])}]),angular.module("ct.ui.router.extras").service("$deepStateRedirect",["$rootScope","$state",function($rootScope,$state){function computeDeepStateStatus(state){var name=state.name;return deepStateRedirectsByName.hasOwnProperty(name)?deepStateRedirectsByName[name]:void recordDeepStateRedirectStatus(name)}function recordDeepStateRedirectStatus(stateName){var state=$state.get(stateName);state&&state.deepStateRedirect===!0&&(deepStateRedirectsByName[stateName]=REDIRECT,lastSubstate[stateName]===undefined&&(lastSubstate[stateName]=stateName));var lastDot=stateName.lastIndexOf(".");if(-1!=lastDot){var parentStatus=recordDeepStateRedirectStatus(stateName.substr(0,lastDot));parentStatus&&deepStateRedirectsByName[stateName]===undefined&&(deepStateRedirectsByName[stateName]=ANCESTOR_REDIRECT)}return deepStateRedirectsByName[stateName]||!1}var lastSubstate={},lastParams={},deepStateRedirectsByName={},REDIRECT="Redirect",ANCESTOR_REDIRECT="AncestorRedirect";return $rootScope.$on("$stateChangeStart",function(event,toState){function shouldRedirect(){var deepStateStatus=computeDeepStateStatus(toState),substate=lastSubstate[toState.name];return!ignoreDsr&&deepStateStatus===REDIRECT&&substate&&substate!=toState.name?!0:!1}shouldRedirect()&&(event.preventDefault(),$state.go(lastSubstate[toState.name],lastParams[toState.name]))}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams){var deepStateStatus=computeDeepStateStatus(toState);if(deepStateStatus){var name=toState.name;angular.forEach(lastSubstate,function(deepState,redirectState){(name==redirectState||-1!=name.indexOf(redirectState+"."))&&(lastSubstate[redirectState]=name,lastParams[redirectState]=angular.copy(toParams))})}}),{}}]),angular.module("ct.ui.router.extras").run(["$deepStateRedirect",function(){}]),$StickyStateProvider.$inject=["$stateProvider"],angular.module("ct.ui.router.extras").provider("$stickyState",$StickyStateProvider);var _StickyState,root,pendingRestore,inactivePseudoState,internalStates={},pendingTransitions=[];angular.module("ct.ui.router.extras").run(["$stickyState",function($stickyState){_StickyState=$stickyState}]),angular.module("ct.ui.router.extras").config(["$provide","$stateProvider","$stickyStateProvider",function($provide,$stateProvider,$stickyStateProvider){inactivePseudoState=angular.extend(new SurrogateState("__inactives"),{self:{name:"__inactives"}}),root=pendingRestore=undefined,pendingTransitions=[],$stateProvider.decorator("parent",function(state,parentFn){return internalStates[state.self.name]=state,state.self.$$state=function(){return internalStates[state.self.name]},state.self.sticky===!0&&$stickyStateProvider.registerStickyState(state.self),parentFn(state)});var $state_transitionTo;$provide.decorator("$state",["$delegate","$log","$q",function($state,$log,$q){return root=$state.$current,root.parent=inactivePseudoState,inactivePseudoState.parent=undefined,root.locals=inherit(inactivePseudoState.locals,root.locals),delete inactivePseudoState.locals.globals,$state_transitionTo=$state.transitionTo,$state.transitionTo=function(to,toParams,options){function stateReactivatedSurrogatePhase1(state){var surrogate=angular.extend(new SurrogateState("reactivate_phase1"),{locals:state.locals});return surrogate.self=angular.extend({},state.self),surrogate}function stateReactivatedSurrogatePhase2(state){var surrogate=angular.extend(new SurrogateState("reactivate_phase2"),state),oldOnEnter=surrogate.self.onEnter;return surrogate.resolve={},surrogate.views={},surrogate.self.onEnter=function(){surrogate.locals=state.locals,_StickyState.stateReactivated(state)},restore.addRestoreFunction(function(){state.self.onEnter=oldOnEnter}),surrogate}function stateInactivatedSurrogate(state){var surrogate=new SurrogateState("inactivate");surrogate.self=state.self;var oldOnExit=state.self.onExit;return surrogate.self.onExit=function(){_StickyState.stateInactivated(state)},restore.addRestoreFunction(function(){state.self.onExit=oldOnExit}),surrogate}function stateEnteredSurrogate(state,toParams){var oldOnEnter=state.self.onEnter;return state.self.onEnter=function(){_StickyState.stateEntering(state,toParams,oldOnEnter)},restore.addRestoreFunction(function(){state.self.onEnter=oldOnEnter}),state}function stateExitedSurrogate(state){var oldOnExit=state.self.onExit;return state.self.onExit=function(){_StickyState.stateExiting(state,exited,oldOnExit)},restore.addRestoreFunction(function(){state.self.onExit=oldOnExit}),state}inactivePseudoState.locals||(inactivePseudoState.locals=root.locals);var idx=pendingTransitions.length;pendingRestore&&(pendingRestore(),DEBUG&&$log.debug("Restored paths from pending transition"));var savedToStatePath,savedFromStatePath,stickyTransitions,terminalReactivatedState,fromState=$state.$current,fromParams=$state.params,rel=options&&options.relative||$state.$current,toStateSelf=$state.get(to,rel),reactivated=[],exited=[],noop=function(){},restore=function(){savedToStatePath&&(toState.path=savedToStatePath,savedToStatePath=null),savedFromStatePath&&(fromState.path=savedFromStatePath,savedFromStatePath=null),angular.forEach(restore.restoreFunctions,function(restoreFunction){restoreFunction()}),restore=noop,pendingRestore=null,pendingTransitions.splice(idx,1)};if(restore.restoreFunctions=[],restore.addRestoreFunction=function(fn){this.restoreFunctions.push(fn)},toStateSelf){var toState=internalStates[toStateSelf.name];if(toState){savedToStatePath=toState.path,savedFromStatePath=fromState.path;var currentTransition={toState:toState,toParams:toParams||{},fromState:fromState,fromParams:fromParams||{},options:options};pendingTransitions.push(currentTransition),pendingRestore=restore,stickyTransitions=_StickyState.processTransition(currentTransition),DEBUG&&debugTransition($log,currentTransition,stickyTransitions);var surrogateToPath=toState.path.slice(0,stickyTransitions.keep),surrogateFromPath=fromState.path.slice(0,stickyTransitions.keep);angular.forEach(inactivePseudoState.locals,function(local,name){-1!=name.indexOf("@")&&delete inactivePseudoState.locals[name]});for(var i=0;i<stickyTransitions.inactives.length;i++){var iLocals=stickyTransitions.inactives[i].locals;angular.forEach(iLocals,function(view,name){iLocals.hasOwnProperty(name)&&-1!=name.indexOf("@")&&(inactivePseudoState.locals[name]=view)})}if(angular.forEach(stickyTransitions.enter,function(value,idx){var surrogate;"reactivate"===value?(surrogate=stateReactivatedSurrogatePhase1(toState.path[idx]),surrogateToPath.push(surrogate),surrogateFromPath.push(surrogate),reactivated.push(stateReactivatedSurrogatePhase2(toState.path[idx])),terminalReactivatedState=surrogate):"updateStateParams"===value?(surrogate=stateEnteredSurrogate(toState.path[idx]),surrogateToPath.push(surrogate),terminalReactivatedState=surrogate):"enter"===value&&surrogateToPath.push(stateEnteredSurrogate(toState.path[idx]))}),angular.forEach(stickyTransitions.exit,function(value,idx){var exiting=fromState.path[idx];"inactivate"===value?(surrogateFromPath.push(stateInactivatedSurrogate(exiting)),exited.push(exiting)):"exit"===value&&(surrogateFromPath.push(stateExitedSurrogate(exiting)),exited.push(exiting))}),reactivated.length&&angular.forEach(reactivated,function(surrogate){surrogateToPath.push(surrogate)}),terminalReactivatedState){var prefix=terminalReactivatedState.self.name+".",inactiveStates=_StickyState.getInactiveStates(),inactiveOrphans=[];inactiveStates.forEach(function(exiting){0===exiting.self.name.indexOf(prefix)&&inactiveOrphans.push(exiting)}),inactiveOrphans.sort(),inactiveOrphans.reverse(),surrogateFromPath=surrogateFromPath.concat(map(inactiveOrphans,function(exiting){return stateExitedSurrogate(exiting)})),exited=exited.concat(inactiveOrphans)}toState.path=surrogateToPath,fromState.path=surrogateFromPath;var pathMessage=function(state){return(state.surrogateType?state.surrogateType+":":"")+state.self.name};DEBUG&&$log.debug("SurrogateFromPath: ",map(surrogateFromPath,pathMessage)),DEBUG&&$log.debug("SurrogateToPath:   ",map(surrogateToPath,pathMessage))}}var transitionPromise=$state_transitionTo.apply($state,arguments);return transitionPromise.then(function(state){return restore(),DEBUG&&debugViewsAfterSuccess($log,internalStates[state.name],$state),state.status="active",state},function(err){return restore(),DEBUG&&"transition prevented"!==err.message&&"transition aborted"!==err.message&&"transition superseded"!==err.message&&($log.debug("transition failed",err),console.log(err.stack)),$q.reject(err)})},$state}])}]),angular.module("ct.ui.router.extras").provider("$futureState",["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){function findFutureState($state,options){if(options.name)for(var nameComponents=options.name.split(/\./);nameComponents.length;){var stateName=nameComponents.join(".");if($state.get(stateName))return null;if(futureStates[stateName])return futureStates[stateName];nameComponents.pop()}if(options.url)for(var urlComponents=options.url.split(/\//);urlComponents.length;){var urlPrefix=urlComponents.join("/");if(futureUrlPrefixes[urlPrefix])return futureUrlPrefixes[urlPrefix];urlComponents.pop()}}function lazyLoadState($injector,futureState){if(!futureState){var deferred=$q.defer();return deferred.reject("No lazyState passed in "+futureState),deferred.promise}var type=futureState.type,factory=stateFactories[type];if(!factory)throw Error("No state factory for futureState.type: "+(futureState&&futureState.type));return $injector.invoke(factory,factory,{futureState:futureState})}function futureState_otherwise($injector,$location){var resyncing=!1,$log=$injector.get("$log"),otherwiseFunc=["$state",function(){$log.debug("Unable to map "+$location.path()),$location.url("/")}],lazyLoadMissingState=["$rootScope","$urlRouter","$state",function($rootScope,$urlRouter,$state){if(!initDone)return initPromise().then(function(){resyncing=!0,$urlRouter.sync(),resyncing=!1}),void(initDone=!0);var futureState=findFutureState($state,{url:$location.path()});return futureState?(transitionPending=!0,void lazyLoadState($injector,futureState).then(function(state){state&&!$state.get(state)&&$stateProvider.state(state),resyncing=!0,$urlRouter.sync(),resyncing=!1,transitionPending=!1},function(){transitionPending=!1,$state.go("top")})):$injector.invoke(otherwiseFunc)}];if(!transitionPending){var nextFn=resyncing?otherwiseFunc:lazyLoadMissingState;return $injector.invoke(nextFn)}}var initPromise,stateFactories={},futureStates={},futureUrlPrefixes={},transitionPending=!1,resolveFunctions=[],initDone=!1,provider=this;this.addResolve=function(promiseFn){resolveFunctions.push(promiseFn)},this.stateFactory=function(futureStateType,factory){stateFactories[futureStateType]=factory},this.futureState=function(futureState){futureStates[futureState.stateName]=futureState,futureUrlPrefixes[futureState.urlPrefix]=futureState},this.get=function(){return angular.extend({},futureStates)},$urlRouterProvider.otherwise(futureState_otherwise);var serviceObject={getResolvePromise:function(){return initPromise()}};this.$get=["$injector","$state","$q","$rootScope","$urlRouter","$timeout","$log",function($injector,$state,$q,$rootScope,$urlRouter,$timeout,$log){function init(){if($rootScope.$on("$stateNotFound",function(event,unfoundState,fromState,fromParams){if(!transitionPending){$log.debug("event, unfoundState, fromState, fromParams",event,unfoundState,fromState,fromParams);var futureState=findFutureState($state,{name:unfoundState.to});if(futureState){event.preventDefault(),transitionPending=!0;var promise=lazyLoadState($injector,futureState);promise.then(function(state){state&&$stateProvider.state(state),$state.go(unfoundState.to,unfoundState.toParams),transitionPending=!1},function(error){console.log("failed to lazy load state ",error),$state.go(fromState,fromParams),transitionPending=!1})}}}),!initPromise){var promises=[];angular.forEach(resolveFunctions,function(promiseFn){promises.push($injector.invoke(promiseFn))}),initPromise=function(){return $q.all(promises)}}initPromise().then(function(){$timeout(function(){$state.transition?$state.transition.then($urlRouter.sync,$urlRouter.sync):$urlRouter.sync()})})}return init(),serviceObject.state=$stateProvider.state,serviceObject.futureState=provider.futureState,serviceObject.get=provider.get,serviceObject}]}]),angular.module("ct.ui.router.extras").run(["$futureState",function(){}]),angular.module("ct.ui.router.extras").service("$previousState",["$rootScope","$state",function($rootScope,$state){var previous=null,memos={},lastPrevious=null;$rootScope.$on("$stateChangeStart",function(evt,toState,toStateParams,fromState,fromStateParams){lastPrevious=previous,previous={state:fromState,params:fromStateParams}}),$rootScope.$on("$stateChangeError",function(){previous=lastPrevious,lastPrevious=null}),$rootScope.$on("$stateChangeSuccess",function(){lastPrevious=null});var $previousState={get:function(memoName){return memoName?memos[memoName]:previous},go:function(memoName,options){var to=$previousState.get(memoName);return $state.go(to.state,to.params,options)},memo:function(memoName){memos[memoName]=previous},forget:function(memoName){delete memos[memoName]}};return $previousState}]),angular.module("ct.ui.router.extras").run(["$previousState",function(){}]),angular.module("ct.ui.router.extras").config(["$provide",function($provide){$provide.decorator("$state",["$delegate","$rootScope","$q","$injector",function($state,$rootScope,$q,$injector){function decorateInjector(tData){var oldinvoke=$injector.invoke,oldinstantiate=$injector.instantiate;return $injector.invoke=function(fn,self,locals){return oldinvoke(fn,self,angular.extend({$transition$:tData},locals))},$injector.instantiate=function(fn,locals){return oldinstantiate(fn,angular.extend({$transition$:tData},locals))},function(){$injector.invoke=oldinvoke,$injector.instantiate=oldinstantiate}}function popStack(){restoreFnStack.pop()(),tDataStack.pop(),transitionDepth--}function transitionSuccess(deferred,tSuccess){return function(data){return popStack(),$rootScope.$broadcast("$transitionSuccess",tSuccess),deferred.resolve(data)}}function transitionFailure(deferred,tFail){return function(error){return popStack(),$rootScope.$broadcast("$transitionError",tFail,error),deferred.reject(error)}}var $state_transitionTo=$state.transitionTo,transitionDepth=-1,tDataStack=[],restoreFnStack=[];return $state.transitionTo=function(){var deferred=$q.defer(),tData=tDataStack[++transitionDepth]={promise:deferred.promise};restoreFnStack[transitionDepth]=function(){};var tPromise=$state_transitionTo.apply($state,arguments);return tPromise.then(transitionSuccess(deferred,tData),transitionFailure(deferred,tData))},$rootScope.$on("$stateChangeStart",function(evt,toState,toParams,fromState,fromParams){var depth=transitionDepth,tData=angular.extend(tDataStack[depth],{to:{state:toState,params:toParams},from:{state:fromState,params:fromParams}}),restoreFn=decorateInjector(tData);restoreFnStack[depth]=restoreFn,$rootScope.$broadcast("$transitionStart",tData)}),$state}])}])}(window,window.angular);